[include base.cfg]

# define overrides for Mainsail/Fluidd predefined macros - see client.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True    ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 108.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 108.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 50.0    ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_speed_hop        : 25.0    ; z move speed in mm/s
variable_speed_move       : 300.0   ; move speed in mm/s
variable_park_at_cancel   : False   ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 108.0   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 108.0   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_use_fw_retract   : True    ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 86400   ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor e0_sensor"
variable_user_pause_macro : "_PAUSE_MACRO"   ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: "ZCONTROL_ON"    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: "_COMMON_END_PRINT"
gcode:
    M105

[gcode_macro _PAUSE_MACRO]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    ZCONTROL_OFF

[gcode_macro _COMMON_END_PRINT]
# _COMMON_END_PRINT is used by END_PRINT and CANCEL_PRINT
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}

    {% if ("xyz" in printer.toolhead.homed_axes) %}
        G90
        {% set z_max = [ printer['gcode_macro G28'].z | default(220), 220 ] | min %}
        G1 Z{z_max}
        M400
        G1 X{client.custom_park_x} Y{client.custom_park_y}
        M400
    {% endif %}

    _STOP

    AIR_CIRCULATION_STOP

    {% set zstop_motor = printer.save_variables.variables.stop_motor|default(1) | int %}
    {% if zstop_motor == 1 %}
        UPDATE_DELAYED_GCODE ID=_STOP_MOTOR DURATION=25
    {% endif %}

[include client.cfg]

[delayed_gcode _TEST_DISPLAY_OFF]
initial_duration: 180
gcode:
    RESPOND PREFIX="info" MSG="Родной экран отключен"
    RUN_SHELL_COMMAND CMD=zdisplay PARAMS="test"

[delayed_gcode _PREPARE_DISPLAY_OFF]
initial_duration: 1
gcode:
    {% set display_off_timeout = printer.save_variables.variables.display_off_timeout|default(180) | int %}
    UPDATE_DELAYED_GCODE ID=_TEST_DISPLAY_OFF DURATION={display_off_timeout}
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD=auto

[gcode_macro START_PRINT]
description: Замена стандартного стартового G-code
variable_screen: False
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(245)|float %}  ; extruder temp, usually set by slicer
    {% set bed_temp = params.BED_TEMP|default(80)|float %}             ; bed temp, usually set by slicer
    {% set force_kamp = params.FORCE_KAMP|default(False) %}            ; if True it forces the KAMP bed level process
    {% set force_leveling = params.FORCE_LEVELING|default(False) %}    ; if True it forces the bed level process
    {% set skip_leveling = params.SKIP_LEVELING|default(False) %}      ; Не строить карту
    {% set skip_zoffset = params.SKIP_ZOFFSET|default(True) %}         ; Для печати с родного экрана не устанавливать Z offset
    {% set zoffset = params.Z_OFFSET|default(0.0)|float %}             ; Установить Z offset
    {% set mesh = params.MESH|default("")|string %}                    ; Имя профиля карты стола
    {% set internal = params.INTERNAL|default(1)|int %}                ; Внутренний обдув

    {% if params.FORCE_MD5 %}
        {% set force_md5 = params.FORCE_MD5|default(True) %}
        {% if force_md5 == True %}
            {action_raise_error("Параметр FORCE_MD5 переехал в SAVE_ZMOD_DATA\nИспользуйте SAVE_ZMOD_DATA FORCE_MD5=1")}
        {% else %}
            {action_raise_error("Параметр FORCE_MD5 переехал в SAVE_ZMOD_DATA\nИспользуйте SAVE_ZMOD_DATA FORCE_MD5=0")}
        {% endif %}
    {% endif %}

    {% if params.DISABLE_PRIMING %}
        {% set disable_priming = params.DISABLE_PRIMING|default(False) %}
        {% if disable_priming == True %}
            {action_raise_error("Параметр DISABLE_PRIMING переехал в SAVE_ZMOD_DATA\nИспользуйте SAVE_ZMOD_DATA DISABLE_PRIMING=1")}
        {% else %}
            {action_raise_error("Параметр DISABLE_PRIMING переехал в SAVE_ZMOD_DATA\nИспользуйте SAVE_ZMOD_DATA DISABLE_PRIMING=0")}
        {% endif %}
    {% endif %}

    {% if params.DISABLE_SKEW_CORRECT %}
        {% set disable_skew = params.DISABLE_SKEW_CORRECT|default(True) %}
        {% if disable_skew == True %}
            {action_raise_error("Параметр DISABLE_SKEW_CORRECT переехал в SAVE_ZMOD_DATA\nИспользуйте SAVE_ZMOD_DATA DISABLE_SKEW=1")}
        {% else %}
            {action_raise_error("Параметр DISABLE_SKEW_CORRECT переехал в SAVE_ZMOD_DATA\nИспользуйте SAVE_ZMOD_DATA DISABLE_SKEW=0")}
        {% endif %}
    {% endif %}

    {% if params.CLEAR %}
        {% set clear = params.CLEAR|default("_CLEAR1")|string %}
        {action_raise_error("Параметр CLEAR переехал в SAVE_ZMOD_DATA\nИспользуйте SAVE_ZMOD_DATA CLEAR={clear}")}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zforce_kamp VALUE={force_kamp|int}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zbed_temp VALUE={bed_temp|float}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zextruder_temp VALUE={extruder_temp|float}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zforce_leveling VALUE={force_leveling}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zforce_kamp VALUE={force_kamp}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zskip_zoffset VALUE={skip_zoffset}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zskip_leveling VALUE={skip_leveling}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zzoffset VALUE={zoffset|float}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zmesh VALUE='"{mesh|string}"'

    _START_PRINT

    {% if internal == 1 %}
        AIR_CIRCULATION_INTERNAL
    {% else %}
        AIR_CIRCULATION_EXTERNAL
    {% endif %}

[gcode_macro END_PRINT]
description: Завершающий G-cod
gcode:
    # Ретракт

    {% if ("xyz" in printer.toolhead.homed_axes) and (printer.toolhead.extruder != '') and (printer[printer.toolhead.extruder].can_extrude) %}
        G91                     ; relative positioning
        G1 X-2 Y-2 E-5 F2000    ; move away while retracting filament
    {% endif %}

    {% set zauto_reboot = printer.save_variables.variables.auto_reboot|default(0) | int %}
    {% if zauto_reboot != 0 %}
      RESPOND PREFIX="info" MSG="Автоматическая перезагрузка через 1.5 минуты"
      UPDATE_DELAYED_GCODE ID=_AUTO_REBOOT DURATION=90
    {% endif %}

    _COMMON_END_PRINT

[gcode_macro M25]
description: Поставить печать на паузу
rename_existing: M25.1
gcode:
    ZCONTROL_OFF
    PAUSE

[gcode_macro M24]
rename_existing: M24.1
gcode:
    {% if printer.pause_resume.is_paused %}
        ZCONTROL_ON
        RESUME
    {% else %}
        ZCONTROL_ON
        M24.1
    {% endif %}
